{"version":3,"file":"app.d229053199c9b1679ace.hot-update.js","sources":["webpack:///C:/Users/kha03/Desktop/forMarketing-master/src/EventButton.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n    TouchableOpacity,\n    Text,\n} from 'react-native';\nimport styles from './Style';\nimport * as firebase from 'firebase';\n\nexport default class BoothButton extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: [],\n            txt: ''\n        }\n    }\n\n\n    componentDidMount() {\n        var col = this.props.col;\n        var row = this.props.row;\n        var addName = ''\n        var flag = 0;\n        firebase.database().ref().child(\"users\").once(\"value\")\n            .then((result) => {\n                result.forEach((resultChild) => {\n                    var key = resultChild.key\n                    var nametest = resultChild.child('name').val().slice(1, 3)\n                    var name = nametest.concat(\" \")\n                    var number = resultChild.child('number').val()\n                    var position = resultChild.child('position').val()\n                    var team = resultChild.child('team').val()\n                    var time = firebase.database().ref(\"users/\" + key + \"/timetable/\" + col + \"/\" + row)\n                    time.on(\"value\", (tt) => {\n                        if (tt.val() === false && flag === 0) {\n                                this.setState({\n                                    name: this.state.name.concat(name)\n                                })\n                                firebase.database().ref('labor/'+col).update({\n                                    [row] : [this.state.name]\n                                });\n                        } else if (tt.val() == null && flag === 0) {\n                            this.setState({\n                                name: this.state.name.concat(this.props.text)\n                            })\n                            flag = 1\n                        }\n                    })\n                })\n            })\n    }\n\n\n    render() {\n        return (\n            <TouchableOpacity style={[styles.tileButton, this.props.style]}>\n                <Text style={styles.makeText}>{this.state.name}</Text>\n            </TouchableOpacity>\n        )\n    }\n}"],"mappings":";;;;;;;;;AAAA;;;;A","sourceRoot":""}