{"version":3,"file":"app.741b0c00cd91d1fad9fd.hot-update.js","sources":["webpack:///C:/Users/kha03/Desktop/forMarketing-master/src/BoothButton.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n    TouchableOpacity,\n    Text,\n} from 'react-native';\nimport styles from './Style';\nimport * as firebase from 'firebase';\n\nexport default class BoothButton extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: [],\n            dayStart: '',\n            dayEnd: '',\n            start: '',\n            end: '',\n        }\n\n        this.componentDidMount = this.componentDidMount.bind(this)\n    }\n\n\n    componentDidMount() {\n        var col = this.props.col;\n        var row = this.props.row;\n        var addName = ''\n        var flag = 0\n\n        firebase.database().ref().child(\"users\").once(\"value\")\n            .then((result) => {\n                var flagA = 0\n                result.forEach((resultChild) => {\n                    var key = resultChild.key\n                    var basicname = resultChild.child('name').val()\n                    var nametest = resultChild.child('name').val().slice(1, 3)\n                    var name = nametest.concat(\" \")\n                    var number = resultChild.child('number').val()\n                    var position = resultChild.child('position').val()\n                    var team = resultChild.child('team').val()\n                    var time = firebase.database().ref(\"users/\" + key + \"/timetable/\" + col + \"/\" + row)\n                    var use = firebase.database().ref(\"users/\" + key + \"/attend\")\n\n\n                    firebase.database().ref('select').once('value')\n                        .then((choice) => {\n                            var start = choice.child('start')\n                            var end = choice.child('end')\n                            console.log(start, end)\n\n                            for (var i = start; i <= end; i++) {\n                                time.on(\"value\", (tt) => {\n                                    if (tt.val() === false && flag === 0) {\n                                        console.log('fail', i)\n                                        if ((row == i) && (col === \"Mon\" || col === \"Tue\" || col === \"Wed\")) {\n                                            console.log('success')\n                                            var k = 0\n                                            use.transaction(info => {\n                                                if ((flagA < 5 && this.state.name.length < 5)) {\n                                                    if (info > 0 && k == 0) {\n\n                                                        this.setState({\n                                                            name: this.state.name.concat(name)\n                                                        })\n                                                        console.log(this.state.name)\n                                                        console.log(flagA)\n                                                        k = 1\n                                                        flagA = flagA + 1\n                                                        return info - 1;\n                                                    }\n                                                }\n                                            })\n\n\n                                        }\n\n                                    } else if (tt.val() == null && flag === 0) {\n                                        this.setState({\n                                            name: this.state.name.concat(this.props.text)\n                                        })\n                                        flag = 1\n                                    }\n                                })\n                            }\n                        })\n                })\n            })\n    }\n\n\n\n    render() {\n        return (\n            <TouchableOpacity style={[styles.tileButton, this.props.style]} >\n                <Text style={styles.makeText}>{this.state.name}</Text>\n            </TouchableOpacity>\n        )\n    }\n}\n\n"],"mappings":";;;;;;;;;AAAA;;;;A","sourceRoot":""}