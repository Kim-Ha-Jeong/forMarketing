{"version":3,"file":"app.d19954796b898ee656d9.hot-update.js","sources":["webpack:///C:/Users/kha03/Desktop/forMarketing-master/src/TileButton.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {\n    TouchableOpacity,\n    Text,\n} from 'react-native';\nimport styles from './Style';\nimport * as firebase from 'firebase';\n\nexport default class FooterButton extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            color: '#fff'\n        }\n    }\n\n    componentDidMount(){\n        var user = firebase.auth().currentUser;\n        var col = this.props.col;\n        var row = this.props.row;\n        var flag = 0;\n        var isTrue = firebase.database().ref('users/' + user.uid + '/timetable/'+col+'/'+row)\n        isTrue.on(\"value\", setting = (result) => {\n            if(result.val() === false && flag === 0){\n                this.setState({\n                    color:'#fff'\n                });\n                flag = 1;\n            } else if(result.val() && flag === 0){\n                this.setState({\n                    color:'#feecf3'\n                });\n            }\n        })\n    }\n\n\n    changeDB = () => {\n        var user = firebase.auth().currentUser;\n        var col = this.props.col;\n        var row = this.props.row;\n        var flag = 0;\n        var isTrue = firebase.database().ref('users/' + user.uid + '/timetable/'+col+'/'+row)\n        isTrue.on(\"value\", changeColor = (result) => {\n            if(result.val() === false && flag === 0){\n                firebase.database().ref('users/' + user.uid + '/timetable/'+col).update({\n                    [row]:true\n                });\n                this.setState({\n                    color:'#feecf3'\n                });\n                flag = 1;\n            } else if(result.val() && flag === 0){\n                firebase.database().ref('users/' + user.uid + '/timetable/'+col).update({\n                    [row]:false\n                });\n                this.setState({\n                    color:'#fff'\n                });\n                flag = 1;\n            }\n        })\n        \n    }\n\n    render() {\n        return(\n            <TouchableOpacity \n                style={[styles.tileButton,{backgroundColor: this.state.color},this.props.style]}\n                onPress={this.changeDB}\n                disabled={this.props.dis}\n                underlayColor='#fff'\n                >\n                <Text style={styles.tileText}>{this.props.text}</Text>\n            </TouchableOpacity>\n        )\n    }\n}"],"mappings":";;;;;;;;;AAAA;;;;A","sourceRoot":""}